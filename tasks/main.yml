---
- name: Include stuff
  include_vars: vars/vars.yml

- name: Debug
  debug: var=ansible_os_family

- name: Add Docker test repo
  yum_repository: name=docker-test.repo description='Docker test repo' baseurl=https://yum.dockerproject.org/repo/main/centos/7 enabled=yes gpgcheck=yes gpgkey=https://yum.dockerproject.org/gpg
  when: ansible_os_family == "RedHat"

- name: Install Docker
  yum: name=docker-engine state=present
  when: ansible_os_family == "RedHat"

- name: Start Docker service
  service: name=docker state=started enabled=yes

- name: ensure that pip is installed
  shell: curl -s https://bootstrap.pypa.io/get-pip.py | python -
         creates=/usr/bin/pip

- name: ensure that docker-py client library has been installed via pip
  pip:
    name: docker-py
    state: latest

- name: Initialize the swarm
  shell: "docker swarm init --advertise-addr {{ inventory_hostname }}"
  ignore_errors: yes
  run_once: yes
  when: docker_role == 'manager'

- name: Get worker token
  shell: "docker swarm join-token -q worker"
  register: worker_token
  run_once: yes
  when: docker_role == 'manager'

- name: Get manager token
  shell: "docker swarm join-token -q manager"
  register: manager_token
  run_once: yes
  when: docker_role == 'manager'

# This can be uncommented when Docker fixes their shit. Before that only one manager is supported
- name: Join the swarm as manager
  shell: docker swarm join --token {{ manager_token.stdout }} --advertise-addr {{ inventory_hostname }}:2377 10.1.43.2:2377 #Need to make this IP dynamic
  ignore_errors: yes
  when: docker_role == 'manager'

- name: Join the swarm as worker
  shell: docker swarm join --token {{ worker_token.stdout }} 10.1.43.2:2377 #Need to make this IP dynamic
  ignore_errors: yes
  when: docker_role == 'worker'
